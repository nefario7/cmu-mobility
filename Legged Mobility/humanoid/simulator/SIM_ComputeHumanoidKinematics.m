function [CM_pos,CM_vel,Jcm,dJcmxdq,Jfp,dJfpxdq] = SIM_ComputeHumanoidKinematics(q,dq)
%SIM_COMPUTEHUMANOIDKINEMATICS
%    [CM_POS,CM_VEL,JCM,DJCMXDQ,JFP,DJFPXDQ] = SIM_COMPUTEHUMANOIDKINEMATICS(Q1,Q2,Q3,Q4,Q5,DQ1,DQ2,DQ3,DQ4,DQ5)

%    This function was generated by the Symbolic Math Toolbox version 8.1.
%    26-Nov-2018 15:43:00

% 
% This function was automatically generated from symbolic expressions by the command matlabFunction.
% The symbolic expressions are derived in the script HUMANOIDSYMBOLICMATH. The model parameters in
% these epressions are converted into numerical values based on the values given in the script
% DEFINEHUMANOIDPARAMS. Finally, the resulting functions of only q, dq and tau are converted into this
% Matlab function SIM_COMPUTEHUMANOIDKINEMATICS.
% 
% NOTE: If the humanoid parameters are changed, this function becomes invalid, and it has to be
% generated anew following the outlined procedure.
% 
% In:
% q, dq: joint angles and velocities
% 
% Out:
% CM_pos, CM_vel : CoM position and velocity
% Jcm, dJcmxdq : Center of Mass Jacobian Jcm and related term dJ*dq needed for computing current CoM acceleration
% Jfp, dJfpxdq : Foot Point Jacobian and related term dJ*dq needed for computing current FP acceleration
% 
% H. Geyer, Nov 2018

%% assign individual angles, angular velocities and accelerations from vector inputs
q1 = q(1); q2 = q(2);  q3= q(3);  q4= q(4);  q5= q(5);
dq1=dq(1); dq2=dq(2); dq3=dq(3); dq4=dq(4); dq5=dq(5);
 
%% Code below was automatically generated by command matlabFunction
% -----------------------------------------------------------------
 
t2 = sin(q1);
t3 = sin(q2);
t4 = sin(q3);
t5 = sin(q4);
t6 = sin(q5);
t7 = cos(q1);
t8 = cos(q2);
t9 = cos(q3);
t10 = cos(q4);
t11 = cos(q5);
t12 = t7.*3.8976e-1;
t13 = t8.*3.4029e-1;
t14 = t9.*1.0e-1;
t15 = t10.*5.971e-2;
t16 = t11.*1.024e-2;
CM_pos = [t12+t13+t14+t15+t16;t2.*3.8976e-1+t3.*3.4029e-1+t4.*1.0e-1+t5.*5.971e-2+t6.*1.024e-2];
if nargout > 1
    CM_vel = [dq1.*t2.*-3.8976e-1-dq2.*t3.*3.4029e-1-dq3.*t4.*1.0e-1-dq4.*t5.*5.971e-2-dq5.*t6.*1.024e-2;dq1.*t7.*3.8976e-1+dq2.*t8.*3.4029e-1+dq3.*t9.*1.0e-1+dq4.*t10.*5.971e-2+dq5.*t11.*1.024e-2];
end
if nargout > 2
    Jcm = reshape([t2.*-3.8976e-1,t12,t3.*-3.4029e-1,t13,t4.*-1.0e-1,t14,t5.*-5.971e-2,t15,t6.*-1.024e-2,t16],[2,5]);
end
if nargout > 3
    t17 = dq1.^2;
    t18 = dq2.^2;
    t19 = dq3.^2;
    t20 = dq4.^2;
    t21 = dq5.^2;
    dJcmxdq = [t7.*t17.*-3.8976e-1-t8.*t18.*3.4029e-1-t9.*t19.*1.0e-1-t10.*t20.*5.971e-2-t11.*t21.*1.024e-2;t2.*t17.*-3.8976e-1-t3.*t18.*3.4029e-1-t4.*t19.*1.0e-1-t5.*t20.*5.971e-2-t6.*t21.*1.024e-2];
end
if nargout > 4
    Jfp = reshape([t2.*-4.0e-1,t7.*4.0e-1,t3.*-4.0e-1,t8.*4.0e-1,0.0,0.0,t5.*-4.0e-1,t10.*4.0e-1,t6.*-4.0e-1,t11.*4.0e-1],[2,5]);
end
if nargout > 5
    dJfpxdq = [t7.*t17.*-4.0e-1-t8.*t18.*4.0e-1-t10.*t20.*4.0e-1-t11.*t21.*4.0e-1;t2.*t17.*-4.0e-1-t3.*t18.*4.0e-1-t5.*t20.*4.0e-1-t6.*t21.*4.0e-1];
end
